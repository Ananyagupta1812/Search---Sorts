#include <iostream>
#include <limits.h>
using namespace std;

int tsp(int graph[][10], bool visited[], int currPos, int n, int count, int cost, int& minCost) {
    if (count == n && graph[currPos][0]) {
        minCost = min(minCost, cost + graph[currPos][0]);
        return minCost;
    }

    for (int i = 0; i < n; i++) {
        if (!visited[i] && graph[currPos][i]) {
            visited[i] = true;
            tsp(graph, visited, i, n, count + 1, cost + graph[currPos][i], minCost);
            visited[i] = false;
        }
    }
    return minCost;
}

int main() {
    int n;
    cout << "Enter the number of cities: ";
    cin >> n;

    int graph[10][10];
    cout << "Enter the adjacency matrix:\n";
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> graph[i][j];
        }
    }

    bool visited[10] = {false};
    visited[0] = true;
    int minCost = INT_MAX;

    cout << "Minimum cost of TSP = " << tsp(graph, visited, 0, n, 1, 0, minCost) << endl;
    return 0;
}
