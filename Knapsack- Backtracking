#include <iostream>
using namespace std;

int maxValue = 0;

void knapsackBacktrack(int i, int W, int currentWeight, int currentValue, int n, int values[], int weights[]) {
    if (i == n) {
        maxValue = max(maxValue, currentValue);
        return;
    }
    if (currentWeight + weights[i] <= W) {
        knapsackBacktrack(i + 1, W, currentWeight + weights[i], currentValue + values[i], n, values, weights);
    }
    knapsackBacktrack(i + 1, W, currentWeight, currentValue, n, values, weights);
}

int main() {
    int n, W;
    cout << "Enter number of items: ";
    cin >> n;
    cout << "Enter capacity of knapsack: ";
    cin >> W;

    int values[n], weights[n];
    cout << "Enter value and weight of each item:\n";
    for (int i = 0; i < n; i++) {
        cin >> values[i] >> weights[i];
    }

    knapsackBacktrack(0, W, 0, 0, n, values, weights);
    cout << "Maximum value in knapsack = " << maxValue << endl;
    return 0;
}
