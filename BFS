//BFS- Breath first search code in c++
#include <iostream>
#include <queue>
#include <vector>
using namespace std; 

void printAdjacencyMatrix (int adjMatrix[][5], int n) { 
  cout << "Adjacency Matrix:" << endl; 
  for (int i = 0; i < n; i++) { 
    for (int j = 0; j < n; j++) {
      cout << adjMatrix[i][j] << " "; 
    }
    cout << endl; 
  } 
} 

void BFS (int startNode, int adjMatrix[][5], int n) { 
  bool visited[n]; 
  for (int i = 0; i < n; i++) {
  	  visited[i] = false;
  }
  queue<int> q;
  visited[startNode] = true;
  q.push(startNode); 
  cout << "Nodes reachable from node " << startNode << ":"; 
  cout<<"Using BFS"<<endl;
  while (!q.empty()) { 
    int currentNode = q.front(); 
    q.pop(); 
    cout << currentNode << " ";
    for (int i = 0; i < n; i++) { 
      if (adjMatrix[currentNode][i] == 1 && !visited[i]) 
        visited[i] = true; q.push(i); 
    }
  } 
} 
int main() { 
  int n = 5;
  int adjMatrix[5][5] = {
    {0, 1, 1, 0, 0}, 
    {0, 0, 1, 1, 0}, 
    {0, 0, 0, 1, 1}, 
    {0, 1, 0, 0, 4},
    {0, 1, 0, 1, 0}
  };
  printAdjacencyMatrix(adjMatrix, n);
  int startNode;
  cout << "Enter the starting node (0 to 4): "; 
  cin >> startNode;
  BFS(startNode, adjMatrix, n);
  return 0; 
}
